bot=getBot()items={6416,3196;1500;1498;2806,2804;8270;8272;8274;4676;4678;4680;4682,4652,4650,4648;4646,11186,10086,10084;2206,2244;2246;2242,2248,2250;3792;3306,4654;3204;12502}goods={2206;2242;2244;2246;2248;2250;3792,3306;4654}drop_list={}duplicate_line={}stop_script=false custom_storage=false use_coord=false charging=false found_owner=false multibot=false function check_table(D)if D.x and D.y then use_coord=true elseif D.good and D.bad then use_coord=false else log("\115\116\111\114\097\103\101\095\112\111\115 \110\111\116 \118\097\108\105\100\044 \099\104\101\099\107 \101\120\097\109\112\108\101 \105\110 \115\101\114\118\101\114\n")stop_script=true return end end function check_owner_table(D,R)for D,M in pairs(D)do if string.upper(M)==string.upper(R)then return true end end return false end function get_signals()sleep(500)local D=bot:getSignal()sleep(500)if D==RAPIDGREEN then return 4 elseif D==GREEN then return 3 elseif D==YELLOW then return 2 elseif D==RED then return 1 else return 0 end end function round(D)return D%1>.5 and math.ceil(D)or math.floor(D)end function collect(D,R)for M,P in pairs(bot:getObjects())do local Y=math.floor(P.pos.x/32)local h=math.floor(P.pos.y/32)if bot:isInside(Y,h,D)then if R==nil or P.id==R then bot:collectObject(P.uid)end end end end function face_side(D)local R={}R.type=0 if D=="\108\101\102\116"then R.flags=48 elseif D=="\114\105\103\104\116"then R.flags=32 end R.pos_x=(bot:getLocal()).pos.x R.pos_y=(bot:getLocal()).pos.y bot:sendPacketRaw(R)end function take()sleep(1000)bot:autoCollect(2,false)sleep(200)tele(world_take_geiger,id_door_take_geiger)sleep(200)while bot:getItemCount(2204)==0 do while true do for D,R in pairs(bot:getObjects())do if R.id==2204 then if bot:findPath(round(R.pos.x/32)-1,math.floor(R.pos.y/32))then sleep(1000)collect(2)sleep(1000)end end end if bot:getItemCount(2204)>0 then break end end end sleep(2000)while not bot:isEquipped(2204)do wear(2204)sleep(3000)end if bot:getItemCount(2204)>1 then bot:autoCollect(2,false)sleep(500)face_side("\114\105\103\104\116")sleep(3000)bot:drop(2204,bot:getItemCount(2204)-1)sleep(2500)end sleep(1000)end function check_geiger()if bot:isEquipped(2204)then return end if bot:getItemCount(2204)>0 then while not bot:isEquipped(2204)do wear(2204)sleep(3000)end return end if bot:getItemCount(2286)>0 then sleep(1000)tele(geiger_world,geiger_id)charging=true return end if not take_geiger then stop_script=true logs("\084\104\101\114\101 \097\114\101 \110\111 \103\101\105\103\101\114 \105\110 \105\110\118\101\110\116\111\114\121\044 \121\111\117 \109\105\103\104\116 \119\097\110\116 \116\111 \116\117\114\110 \111\110 \116\097\107\101\095\103\101\105\103\101\114")return end while not bot:isEquipped(2204)do take()end end function has_same_worldname(D)local R={}for D,M in pairs(D)do if string.upper(M.world_name)==string.upper(geiger_world)then R[#R+1]=D duplicate_line[(getBot(D)):getIndex()]=D end end return R end function punch(D,R)local M=bot:getLocal()return bot:hitTile(math.floor(M.pos.x/32)+D,math.floor(M.pos.y/32)+R)end function break_toxic_waste()waste_tiles={}for D,R in ipairs(bot:getTiles())do if R.fg==778 or R.bg==778 then table.insert(waste_tiles,{x=R.x,y=R.y})end end if#waste_tiles>0 then logs("\067\108\101\097\114\105\110\103 \084\111\120\105\099 \087\097\115\116\101")while#waste_tiles>0 do for D,R in pairs(waste_tiles)do if bot:findPath(R.x,R.y+1)then sleep(500)punch(0,-1)sleep(1000)table.remove(waste_tiles,D)elseif bot:findPath(R.x,R.y-1)then sleep(500)punch(0,1)sleep(1000)table.remove(waste_tiles,D)elseif bot:findPath(R.x+1,R.y)then sleep(500)punch(-1,0)sleep(1000)table.remove(waste_tiles,D)elseif bot:findPath(R.x-1,R.y)then sleep(500)punch(1,0)sleep(1000)table.remove(waste_tiles,D)end end end logs("\068\111\110\101 \067\108\101\097\114\105\110\103 \084\111\120\105\099 \087\097\115\116\101")end end function bstatus()return bot:getBotStatus()end function estatus()return bot:getEnetStatus()end function cek_multibot(D,R)for D,M in pairs(D)do if string.upper(M.name)==string.upper(R)then return true end end return false end function main()midX,midY=50,27 goods={}check_geiger()if stop_script then return end if charging then return end tele(geiger_world,geiger_id)if multibot then for D,R in pairs(duplicate_line)do if not(getBot(R)):isEquipped(2204)then while(getBot(R)):getItemCount(2204)==0 and(getBot(R)):getItemCount(2286)==0 do sleep(2000)end end end for D,R in pairs(duplicate_line)do if string.upper(R)==string.upper(((getBot()):getLocal()).name)then break end if string.upper(R)~=string.upper(((getBot()):getLocal()).name)then while(getBot(R)):getItemCount(2286)==0 do sleep(2000)end end end end sleep(2000)break_toxic_waste()reserve_items()blup=false bldown=false blright=false blleft=false bltopright=false blbottomright=false blbottomleft=false bltopleft=false if bot:findPath(midX,midY)then sleep(3000)startSignal=get_signals()end if estatus()~=Connected then return end t=os.time()while true do sleep(1000)if startSignal==4 then if estatus()~=Connected then return end sleep(1000)rapid_green()sleep(1000)if estatus()~=Connected then return end if not bot:isEquipped(2204)then break end else while true do if((os.time()-t)%3600)/60>10 then break end if checkDirection()then break end if estatus()~=Connected then return end if((os.time()-t)%3600)/60>10 then break end if checkDiagonal()then break end if estatus()~=Connected then return end if((os.time()-t)%3600)/60>10 then break end end end if((os.time()-t)%3600)/60>10 then log_msg("\067\097\110\'\116  \102\105\110\100 \105\116\101\109 \119\105\116\104\105\110 \049\048 \109\105\110\117\116\101\115\044 \114\101\099\111\110\110\101\099\116")bot:disconnect()sleep(5000)return end end te=os.time()-t sleep(1000)log_msg(get_found_item())sleep(500)logs("\084\105\109\101 \069\108\097\112\115\101\100\058 "..(math.floor((te%3600)/60)..(" \077\105\110\117\116\101\115 "..(te%60 .." \083\101\099\111\110\100\115"))))charging=true end function reserve_items()for D,R in pairs(bot:getInventory())do table.insert(goods,{ids=R.id,jumlah=R.count})sleep(50)end end function is_included(D,R)for R,M in pairs(R)do if D==M.ids then return true end end return false end function is_changed(D,R,M)for M,P in pairs(M)do if D==P.ids then if R==P.jumlah then return false else return true end end end end function count_changed(D,R)for R,M in pairs(R)do if D==M.ids then return bot:getItemCount(D)-M.jumlah end end end function get_found_item()for D,R in pairs(bot:getInventory())do if R.id==2286 then sleep(50)else if not is_included(R.id,goods)or is_changed(R.id,R.count,goods)then local D=(getItemInfo(R.id)).name local M=count_changed(R.id,goods)or bot:getItemCount(R.id)return string.format("\070\111\117\110\100 \073\116\101\109\058  \037\115 \040\120\037\115\041",D,M)end end end return"\099\097\110\'\116 \100\101\116\101\114\109\105\110\101 \102\111\117\110\100 \105\116\101\109\115"end function wear(D)local R={}R.type=10 R.int_data=D bot:sendPacketRaw(R)end function getPosX()return math.floor((bot:getLocal()).pos.x/32)end function getPosY()return math.floor((bot:getLocal()).pos.y/32)end function rapid_up()local D=midX local R=midY if not bot:isEquipped(2204)then return true end while math.floor((bot:getLocal()).pos.y/32)>=0 do while bot:isEquipped(2204)do if get_signals()==4 then if bot:findPath(getPosX()+1,getPosY())then sleep(move_delay)end if estatus()~=Connected then return end else break end if not bot:isEquipped(2204)then return true end end if bot:findPath(D,R)then sleep(move_delay)end if estatus()~=Connected then return end while bot:isEquipped(2204)do if get_signals()==4 then if bot:findPath(getPosX()-1,getPosY())then sleep(move_delay)end if estatus()~=Connected then return end else break end if not bot:isEquipped(2204)then return true end end if math.floor((bot:getLocal()).pos.y/32)~=0 then R=R-1 if bot:findPath(D,R)then sleep(1500)if get_signals()~=4 then return false end end if estatus()~=Connected then return end else return false end end end function rapid_down()local D=midX local R=midY+1 if bot:findPath(D,R)then sleep(move_delay)end if estatus()~=Connected then return end while math.floor((bot:getLocal()).pos.y/32)<=53 do while bot:isEquipped(2204)do if get_signals()==4 then if bot:findPath(getPosX()+1,getPosY())then sleep(move_delay)end if estatus()~=Connected then return end else break end if not bot:isEquipped(2204)then return true end end if bot:findPath(D,R)then sleep(move_delay)end if estatus()~=Connected then return end while bot:isEquipped(2204)do if get_signals()==4 then if bot:findPath(getPosX()-1,getPosY())then sleep(move_delay)end if estatus()~=Connected then return end else break end if not bot:isEquipped(2204)then return true end end if math.floor((bot:getLocal()).pos.y/32)~=53 then R=R+1 if bot:findPath(D,R)then sleep(1500)if get_signals()~=4 then return false end end if estatus()~=Connected then return end else return false end end end function rapid_green()if rapid_up()then return end if estatus()~=Connected then return end sleep(move_delay)if rapid_down()then return end if estatus()~=Connected then return end end function checkDirection()if startSignal==0 then moveSpeed=5 elseif startSignal==1 then moveSpeed=5 elseif startSignal==2 then moveSpeed=5 elseif startSignal==3 then moveSpeed=2 end while getPosY()~=0 do if not bot:isEquipped(2204)then startSignal=4 return true else if not blup then if getPosY()-moveSpeed>=0 then if bot:findPath(getPosX(),getPosY()-moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D bldown=true return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end else if bot:findPath(getPosX(),0)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D bldown=true return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end end else break end end end while getPosX()~=99 do if not bot:isEquipped(2204)then startSignal=4 return true else if not blright then if getPosX()+moveSpeed<=99 then if bot:findPath(getPosX()+moveSpeed,getPosY())then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D blleft=true return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end else if bot:findPath(99,getPosY())then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D blleft=true return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end end else break end end end while getPosY()~=53 do if not bot:isEquipped(2204)then startSignal=4 return true else if not bldown then if getPosY()+moveSpeed<=53 then if bot:findPath(getPosX(),getPosY()+moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D blup=true return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if getPosY()==53 then if bot:findPath(midX,midY)then sleep(move_delay)break end end end end if estatus()~=Connected then return false end else if bot:findPath(getPosX(),53)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D blup=true return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end end else break end end end while getPosX()~=0 do if not bot:isEquipped(2204)then startSignal=4 return true else if not blleft then if getPosX()-moveSpeed>=0 then if bot:findPath(getPosX()-moveSpeed,getPosY())then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D blright=true return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end else if bot:findPath(0,getPosY())then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D blright=true return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end end else break end end end if bot:findPath(midX,midY)then sleep(move_delay)return false end end function checkDiagonal()if startSignal==0 then moveSpeed=5 elseif startSignal==1 then moveSpeed=5 elseif startSignal==2 then moveSpeed=5 elseif startSignal==3 then moveSpeed=2 end while getPosX()~=99 or getPosY()~=0 do if not bot:isEquipped(2204)then startSignal=4 return true else if not bltopright then if getPosX()+moveSpeed<=99 and getPosY()-moveSpeed>=0 then if bot:findPath(getPosX()+moveSpeed,getPosY()-moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()+moveSpeed>99 or getPosY()-moveSpeed<0 then if getPosX()+moveSpeed>99 and getPosY()-moveSpeed>=0 then if bot:findPath(99,getPosY()-moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosY()-moveSpeed<0 and getPosX()+moveSpeed<=99 then if bot:findPath(getPosX()+moveSpeed,0)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()+moveSpeed>99 and getPosY()-moveSpeed<0 then if bot:findPath(99,0)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end end end else break end end end while getPosX()~=99 or getPosY()~=53 do if not bot:isEquipped(2204)then startSignal=4 return true else if not blbottomright then if getPosX()+moveSpeed<=99 and getPosY()+moveSpeed<=53 then if bot:findPath(getPosX()+moveSpeed,getPosY()+moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()+moveSpeed>99 or getPosY()+moveSpeed>53 then if getPosX()+moveSpeed>99 and getPosY()+moveSpeed<=53 then if bot:findPath(99,getPosY()+moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()+moveSpeed<=99 and getPosY()+moveSpeed>53 then if bot:findPath(getPosX()+moveSpeed,53)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()+moveSpeed>99 and getPosY()+moveSpeed>53 then if bot:findPath(99,53)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end end end else break end end end while getPosX()~=0 or getPosY()~=53 do if not bot:isEquipped(2204)then startSignal=4 return true else if not blbottomleft then if getPosX()-moveSpeed>=0 and getPosY()+moveSpeed<=53 then if bot:findPath(getPosX()-moveSpeed,getPosY()+moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()-moveSpeed<0 or getPosY()+moveSpeed>53 then if getPosX()-moveSpeed>=0 and getPosY()+moveSpeed>53 then if bot:findPath(getPosX()-moveSpeed,53)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()-moveSpeed<0 and getPosY()+moveSpeed<=53 then if bot:findPath(0,getPosY()+moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()-moveSpeed<0 and getPosY()+moveSpeed>53 then if bot:findPath(0,53)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end end end else break end end end while getPosX()~=0 or getPosY()~=0 do if not bot:isEquipped(2204)then startSignal=4 return true else if not bltopleft then if getPosX()-moveSpeed>=0 and getPosY()-moveSpeed>=0 then if bot:findPath(getPosX()-moveSpeed,getPosY()-moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()-moveSpeed<0 or getPosY()-moveSpeed<0 then if getPosX()-moveSpeed>=0 and getPosY()-moveSpeed<0 then if bot:findPath(getPosX()-moveSpeed,0)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()-moveSpeed<0 and getPosY()-moveSpeed>=0 then if bot:findPath(0,getPosY()-moveSpeed)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end elseif getPosX()-moveSpeed<0 and getPosY()-moveSpeed<0 then if bot:findPath(0,0)then sleep(move_delay)local D=get_signals()if D>startSignal then midX,midY=getPosX(),getPosY()startSignal=D return true elseif D<startSignal then if bot:findPath(midX,midY)then sleep(move_delay)break end else if bot:findPath(midX,midY)then sleep(move_delay)break end end end if estatus()~=Connected then return false end end end else break end end end if bot:findPath(midX,midY)then sleep(move_delay)return false end end function log_msg(D)log(string.format("\091\037\115\093 \037\115 \n",(bot:getLocal()).name,D))if webhook_enabled then send_webhook(D)end end function logs(D)log(string.format("\091\037\115\093 \037\115 \n",(bot:getLocal()).name,D))end function get_enet_status()local D local R=bot:getEnetStatus()if R==Disconnected then D="\068\105\115\099\111\110\110\101\099\116\101\100"elseif R==Connected then D="\067\111\110\110\101\099\116\101\100"elseif R==ShadowBan then D="\083\104\097\100\111\119 \066\097\110"end return D end function reconInfo()ut=os.time()-tt if get_enet_status()=="\068\105\115\099\111\110\110\101\099\116\101\100"then color=9242129 elseif get_enet_status()=="\067\111\110\110\101\099\116\101\100"then color=756998 end local D="        \123\n            \"\099\111\110\116\101\110\116\"\058 \"\064\101\118\101\114\121\111\110\101\"\044\n            \"\101\109\098\101\100\115\"\058 \091\n              \123\n                \"\116\105\116\108\101\"\058 \"\091"..(string.lower((bot:getLocal()).name)..("\093 \115\116\097\116\117\115 \105\115 "..(get_enet_status()..("\"\044\n                \"\099\111\108\111\114\"\058 "..(color..("\044\n                \"\102\111\111\116\101\114\"\058 \123\n                    \"\116\101\120\116\"\058 \"\066\111\116 \085\112\116\105\109\101\058 "..(math.floor(ut/86400)..(" \068\097\121 "..(math.floor((ut%86400)/3600)..(" \072\111\117\114 "..(math.floor(((ut%86400)%3600)/60)..(" \077\105\110\117\116\101 \092\110\077\097\114\114\'\115 \083\099\114\105\112\116 \124 "..(os.date("\033\037\097 \037\098 \037\100\044 \037\089 \097\116 \037\073\058\037\077 \037\112",os.time()+25200).."\"\n                \125\n              \125\n            \093\044\n            \"\117\115\101\114\110\097\109\101\"\058 \"\083\116\097\116\117\115 \076\111\103\115\"\044\n            \"\097\118\097\116\097\114\095\117\114\108\"\058 \"\104\116\116\112\115\058\047\047\105\046\105\098\098\046\099\111\047\077\083\104\070\057\074\081\047\097\118\097\116\097\114-\098\054\056\054\056\048\053\049-\054\050\054\054-\052\048\051\100-\098\057\100\055-\098\102\101\052\054\098\056\057\053\048\051\098\046\106\112\103\"\044\n            \"\097\116\116\097\099\104\109\101\110\116\115\"\058 \091\093\n        \125\n    ")))))))))))))RequestINFO={}RequestINFO.url=webhook_status_url RequestINFO.method=POST RequestINFO.json=true RequestINFO.postData=D x=httpReq(RequestINFO)end function send_webhook(D)ut=os.time()-tt local R="        \123\n            \"\099\111\110\116\101\110\116\"\058 \110\117\108\108\044\n            \"\101\109\098\101\100\115\"\058 \091\n              \123\n                \"\116\105\116\108\101\"\058 \""..(string.lower(((getBot()):getLocal()).name)..("\"\044\n                \"\100\101\115\099\114\105\112\116\105\111\110\"\058 \""..(D..("\"\044\n                \"\099\111\108\111\114\"\058 \049\048\048\053\055\051\053\044\n                \"\102\111\111\116\101\114\"\058 \123\n                  \"\116\101\120\116\"\058 \"\066\111\116 \085\112\116\105\109\101\058 "..(math.floor(ut/86400)..(" \068\097\121 "..(math.floor((ut%86400)/3600)..(" \072\111\117\114 "..(math.floor(((ut%86400)%3600)/60)..(" \077\105\110\117\116\101 \092\110\077\097\114\114\'\115 \083\099\114\105\112\116 \124 "..(os.date("\033\037\097 \037\098 \037\100\044 \037\089 \097\116 \037\073\058\037\077 \037\112",os.time()+25200).."\"\n                \125\n              \125\n            \093\044\n            \"\117\115\101\114\110\097\109\101\"\058 \"\065\117\116\111 \071\101\105\103\101\114 \076\111\103\115\"\044\n            \"\097\118\097\116\097\114\095\117\114\108\"\058 \"\104\116\116\112\115\058\047\047\105\046\105\098\098\046\099\111\047\077\083\104\070\057\074\081\047\097\118\097\116\097\114-\098\054\056\054\056\048\053\049-\054\050\054\054-\052\048\051\100-\098\057\100\055-\098\102\101\052\054\098\056\057\053\048\051\098\046\106\112\103\"\044\n            \"\097\116\116\097\099\104\109\101\110\116\115\"\058 \091\093\n        \125")))))))))))RequestINFO={}RequestINFO.url=webhook_url RequestINFO.method=POST RequestINFO.json=true RequestINFO.postData=R x=httpReq(RequestINFO)end function tile_drop(D,R,M)local P=0 local Y=0 for M,h in pairs(bot:getObjects())do if math.floor(h.pos.x/32)==D and math.floor(h.pos.y/32)==R then P=P+h.count Y=Y+1 end end if Y<20 and P<=4000-M then return true end return false end function drop(D,R)if R==nil then R=bot:getItemCount(D)end bot:sendPacket("\097\099\116\105\111\110\124\100\114\111\112\n\124\105\116\101\109\073\068\124"..D,2)bot:sendPacket("\097\099\116\105\111\110\124\100\105\097\108\111\103\095\114\101\116\117\114\110\n\100\105\097\108\111\103\095\110\097\109\101\124\100\114\111\112\095\105\116\101\109\n\105\116\101\109\073\068\124"..(D..("\124\n\099\111\117\110\116\124"..R)),2)sleep(1000)end function drop_coord()sleep(2000)local D local R for M,P in pairs(drop_list)do if contains(goods,P)then D=1 R="\114\105\103\104\116"else D=-1 R="\108\101\102\116"end sleep(500)while getPosX()~=storage_pos.x or getPosY()~=storage_pos.y do if bot:findPath(storage_pos.x,storage_pos.y)then sleep(1500)end if estatus()~=Connected then return end end while bot:getItemCount(P)>0 do if tile_drop(storage_pos.x+D,getPosY(),bot:getItemCount(P))then face_side(R)log_msg(string.format("\068\114\111\112\112\105\110\103 \082\101\119\097\114\100\058 \037\105\120 \037\115",bot:getItemCount(P),(getItemInfo(P)).name))sleep(1500)while bot:getItemCount(P)>0 and tile_drop(storage_pos.x+D,getPosY(),bot:getItemCount(P))do drop(P)sleep(1500)end else bot:move(UP,1)sleep(2000)if estatus()~=Connected then return end end end end end function drop_blockid()sleep(2000)local D for R,M in pairs(drop_list)do if contains(goods,M)then D=storage_pos.good else D=storage_pos.bad end sleep(500)for R,P in pairs(bot:getTiles())do if P.fg==D or P.bg==D then if tile_drop(P.x,P.y,bot:getItemCount(M))then while getPosX()~=P.x+1 or getPosY()~=P.y do if bot:findPath(P.x+1,P.y)then sleep(1500)end if estatus()~=Connected then return end end face_side("\108\101\102\116")log_msg(string.format("\068\114\111\112\112\105\110\103 \082\101\119\097\114\100\058 \037\105\120 \037\115",bot:getItemCount(M),(getItemInfo(M)).name))sleep(1500)while bot:getItemCount(M)>0 and tile_drop(P.x,P.y,bot:getItemCount(M))do drop(M)sleep(1500)end end end if bot:getItemCount(M)==0 then break end end end end function drop_item()bot:autoCollect(2,false)local D local R if custom_storage then tele(storage_name,storage_id_door)if not use_coord then drop_blockid()if estatus()~=Connected then return end else drop_coord()if estatus()~=Connected then return end end sleep(2000)drop_list={}tele(geiger_world,geiger_id)return end if not custom_storage then tele(geiger_world,geiger_id)for M,P in pairs(drop_list)do if contains(goods,P)then D=1 R="\114\105\103\104\116"else D=-1 R="\108\101\102\116"end sleep(500)while getPosX()~=45 or getPosY()~=53 do if bot:findPath(45,53)then sleep(1500)end if estatus()~=Connected then return end end while bot:getItemCount(P)>0 do if tile_drop(45+D,getPosY(),bot:getItemCount(P))then face_side(R)log_msg(string.format("\068\114\111\112\112\105\110\103 \082\101\119\097\114\100\058 \037\105\120 \037\115",bot:getItemCount(P),(getItemInfo(P)).name))sleep(1500)while bot:getItemCount(P)>0 and tile_drop(45+D,getPosY(),bot:getItemCount(P))do drop(P)sleep(1500)end else bot:move(UP,1)sleep(2000)if estatus()~=Connected then return end end end end drop_list={}end end function check_inventory()for D,R in pairs(items)do if bot:getItemCount(R)>0 then table.insert(drop_list,R)end end end function tele(D,R)while string.upper((bot:getWorld()).name)~=string.upper(D)do bot:sendPacket("\097\099\116\105\111\110\124\106\111\105\110\095\114\101\113\117\101\115\116\n\110\097\109\101\124"..(string.upper(D).."\n\105\110\118\105\116\101\100\087\111\114\108\100\124\048"),3)sleep(warp_delay)end if R==""or R==nil then return end while(bot:getTile(math.floor((bot:getLocal()).pos.x/32),math.floor((bot:getLocal()).pos.y/32))).fg==6 do bot:sendPacket("\097\099\116\105\111\110\124\106\111\105\110\095\114\101\113\117\101\115\116\n\110\097\109\101\124"..(string.upper(D)..("\124"..(string.upper(R).."\n\105\110\118\105\116\101\100\087\111\114\108\100\124\048"))),3)sleep(warp_delay)end end function charge_geiger()if rest_in_maindoor then if bot:findPath((bot:getWorld()).maindoor.x,(bot:getWorld()).maindoor.y)then sleep(1000)end if estatus()~=Connected then reconInfo()connect()reconInfo()end end logs("\067\104\097\114\103\105\110\103 \071\101\105\103\101\114")while bot:getItemCount(2204)==0 and bot:getItemCount(2286)>0 do sleep(60000)if estatus()~=Connected then reconInfo()connect()reconInfo()end if bot:getItemCount(2204)>0 then break end end end function process_auto_geiger()check_inventory()sleep(2000)if#drop_list>0 then sleep(2000)drop_item()return end if charging then charge_geiger()charging=false return end main()sleep(2000)end function contains(D,R)for D,M in pairs(D)do if M==R then return true end end return false end function is_valid()local D={Disconnected,Connected,Update_Required,SERVER_OVERLOADED,OnSendToServer;LogonATTEMPTS;Success}return contains(D,bot:getBotStatus())end function connect()while true do while bot:getEnetStatus()~=Connected do bot:reConnect()sleep(20000)if not is_valid()then while true do sleep(10000)end end end if bstatus()==Success then break else bot:disconnect()sleep(10000)end end end function cari_owner()tele(world_owner)sleep(2000)bot:say("\087\097\105\116\105\110\103 \102\111\114 \096\050\111\119\110\101\114")sleep(5000)while not found_owner do for D,R in pairs(bot:getPlayers())do local M=R.name:match("\096\037\103\040\091\037\119\093\043\041\096\096")if check_owner_table(owner,M)then bot:say("\096\050"..(M.." \096\048\070\111\117\110\100"))bot:say("\083\116\097\114\116\105\110\103 \115\099\114\105\112\116")sleep(5000)found_owner=true end sleep(500)end end end function lolos(D,R)for D,M in pairs(D)do if string.upper((M:getLocal()).name)==string.upper(R)then return true end end return false end function check_duplicate()local D=has_same_worldname(bot_settings)if#D>1 then multibot=true if#D>3 then local R=""for D,M in pairs(D)do R=R..("\091"..(M.."\093  "))end log(R..("\n\084\104\101\114\101 \097\114\101 "..(#D.." \098\111\116 \119\105\116\104 \115\097\109\101 \119\111\114\108\100\095\110\097\109\101\044 \116\104\101 \115\099\114\105\112\116 \119\105\108\108 \110\111\116 \114\117\110 \102\111\114 \116\104\101\115\101 \098\111\116\n")))stop_script=true return end for D,R in pairs(D)do if not lolos(getAllBot(),R)then log("\073\102 \121\111\117 \119\097\110\116 \116\111 \117\115\101 \109\117\108\116\105\112\108\101 \098\111\116 \105\110 \111\110\101 \119\111\114\108\100\044 \112\108\101\097\115\101 \109\097\107\101 \115\117\114\101 \098\111\116 \105\115 \105\110 \111\110\101 \114\100\112\n")stop_script=true return end end end end function start_geiger()geiger_world=bot_settings[string.upper(((getBot()):getLocal()).name)].world_name geiger_id=bot_settings[string.upper(((getBot()):getLocal()).name)].world_id_door if bot_settings[string.upper(((getBot()):getLocal()).name)].storage_name~=""then custom_storage=true storage_name=bot_settings[string.upper(((getBot()):getLocal()).name)].storage_name storage_id_door=bot_settings[string.upper(((getBot()):getLocal()).name)].storage_id_door check_table(storage_pos)end check_duplicate()if stop_script then return end tt=os.time()logs("\083\116\097\114\116\101\100")while is_valid()do if bot:getEnetStatus()==Connected then process_auto_geiger()if stop_script then return end else reconInfo()connect()reconInfo()end end end start_geiger()
